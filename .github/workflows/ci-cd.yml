name: .NET CI/CD Pipeline

on:
  push:
    branches: [main]
    paths:
      - 'Services/MoodTrackerAPI/**'
      - 'Services/SupportiveMessageProducer/**'
      - 'Services/SupportiveMessageConsumer/**'
  pull_request:
    branches: [main]
    paths:
      - 'Services/MoodTrackerAPI/**'
      - 'Services/SupportiveMessageProducer/**'
      - 'Services/SupportiveMessageConsumer/**'
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - dockerfile: ./Services/MoodTrackerAPI/Dockerfile
            image: ghcr.io/drxxmn/sentimate-api
            context: ./Services/MoodTrackerAPI
            service-name: MoodTrackerAPI
          - dockerfile: ./Services/SupportiveMessageProducer/Dockerfile
            image: ghcr.io/drxxmn/supportive-message-producer
            context: ./Services/SupportiveMessageProducer
            service-name: SupportiveMessageProducer
          - dockerfile: ./Services/SupportiveMessageConsumer/Dockerfile
            image: ghcr.io/drxxmn/supportive-message-consumer
            context: ./Services/SupportiveMessageConsumer
            service-name: SupportiveMessageConsumer

    name: Build and push container ${{ matrix.service-name }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
